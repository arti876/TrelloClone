{"version":3,"sources":["js/index.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["Feed","fetchData","type","fetch","concat","then","r","json","Promise","all","map","_ref","_ref2","_slicedToArray","users","todos","posts","usersObj","Object","fromEntries","n","id","postsObj","todosObj","todo","user","userId","post","console","log","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","Function","deps","cached","cache","some","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,IAAIA,CAAA,EAAG;EAEd,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAIC,IAAI;IAAA,OAAKC,KAAK,yCAAAC,MAAA,CAAyCF,IAAI,CAAE,CAAC,CAACG,IAAI,CAAC,UAAAC,CAAC;MAAA,OAAIA,CAAC,CAACC,IAAI,CAAC,CAAC;IAAA,EAAC;EAAA;EAErG,OAAOC,OAAO,CAACC,GAAG,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAACC,GAAG,CAACT,SAAS,CAAC,CAAC,CAC3DI,IAAI,CAAC,UAAAM,IAAA,EAA2B;IAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,IAAA;MAAzBG,KAAK,GAAAF,KAAA;MAAEG,KAAK,GAAAH,KAAA;MAAEI,KAAK,GAAAJ,KAAA;IACzB,IAAMK,QAAQ,GAAGC,MAAM,CAACC,WAAW,CAACL,KAAK,CAACJ,GAAG,CAAC,UAAAU,CAAC;MAAA,OAAI,CAACA,CAAC,CAACC,EAAE,EAAED,CAAC,CAAC;IAAA,EAAC,CAAC;IAC9D,IAAME,QAAQ,GAAGJ,MAAM,CAACC,WAAW,CAACH,KAAK,CAACN,GAAG,CAAC,UAAAU,CAAC;MAAA,OAAI,CAACA,CAAC,CAACC,EAAE,EAAED,CAAC,CAAC;IAAA,EAAC,CAAC;IAC9D,IAAMG,QAAQ,GAAGR,KAAK,CAACL,GAAG,CAAC,UAAAU,CAAC;MAAA,OAAK;QAC/BI,IAAI,EAAEJ,CAAC;QACPK,IAAI,EAAER,QAAQ,CAACG,CAAC,CAACM,MAAM,CAAC;QACxBC,IAAI,EAAEL,QAAQ,CAACF,CAAC,CAACM,MAAM;MACzB,CAAC;IAAA,CAAC,CAAC;IACHE,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;EACvB,CAAC,CAAC;AACN;AAEAvB,IAAI,CAAC,CAAC;;AAEN;AACA;AACA;AACA;;AAGA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAIA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"js.00a46daa.js","sourceRoot":"..\\src","sourcesContent":["// import {\r\n//   startTime,\r\n// } from './reExport.js';\r\n\r\n// ------------------------------------------------------------------------------\r\n\r\n// const getTrelloData = async () => {\r\n//   const todosPlaceholder = await fetch('https://jsonplaceholder.typicode.com/todos').then((response) => response.json());\r\n//   const usersPlaceholder = await fetch('https://jsonplaceholder.typicode.com/users').then((response) => response.json());\r\n//   const commentsPlaceholder = await fetch('https://jsonplaceholder.typicode.com/comments').then((response) => response.json());\r\n\r\n//   return {\r\n//     todosPlaceholder,\r\n//     usersPlaceholder,\r\n//     commentsPlaceholder\r\n//   }\r\n// }\r\n\r\nfunction Feed() {\r\n\r\n  const fetchData = (type) => fetch(`https://jsonplaceholder.typicode.com/${type}`).then(r => r.json());\r\n\r\n  return Promise.all(['users', 'todos', 'posts'].map(fetchData))\r\n    .then(([users, todos, posts]) => {\r\n      const usersObj = Object.fromEntries(users.map(n => [n.id, n]))\r\n      const postsObj = Object.fromEntries(posts.map(n => [n.id, n]))\r\n      const todosObj = todos.map(n => ({\r\n        todo: n,\r\n        user: usersObj[n.userId],\r\n        post: postsObj[n.userId]\r\n      }))\r\n      console.log(todosObj)\r\n    })\r\n}\r\n\r\nFeed()\r\n\r\n// setData(posts.map(n => ({\r\n//   post: n,\r\n//   user: usersObj[n.userId],\r\n// })));\r\n\r\n\r\n// const runTrelloApplication = async () => {\r\n//   const { todosPlaceholder, usersPlaceholder, commentsPlaceholder } = await getTrelloData();\r\n\r\n\r\n\r\n//   // ------------------------------------------------------------------------------\r\n//   // // localStorage\r\n\r\n//   // // получить\r\n//   // function getData(key) {\r\n//   //   return JSON.parse(localStorage.getItem(key)) ?? [];\r\n//   // };\r\n\r\n//   // // записать\r\n//   // function setData(key, value) {\r\n//   //   localStorage.setItem(key, JSON.stringify(value));\r\n//   // };\r\n\r\n//   // setData('todosPlaceholder', todosPlaceholder)\r\n//   // setData('usersPlaceholder', usersPlaceholder)\r\n//   // setData('commentsPlaceholder', commentsPlaceholder)\r\n\r\n//   // const todosPlaceholderGetData = getData('todosPlaceholder'); // id + title + completed\r\n//   // const usersPlaceholderGetData = getData('usersPlaceholder'); // id + name\r\n//   // const commentsPlaceholderGetData = getData('commentsPlaceholder'); // id + body\r\n\r\n//   // // const todos = setData('todos', todos);\r\n\r\n//   // console.log(usersPlaceholderGetData)\r\n\r\n\r\n\r\n//   // // todos.forEach(todo => {\r\n//   // //   createTodoCard(todo);\r\n//   // // });\r\n\r\n\r\n//   // ------------------------------------------------------------------------------\r\n//   // получить текущую дату и время\r\n\r\n//   function getDate() {\r\n//     const data = new Date();\r\n//     const Year = data.getFullYear();\r\n//     const Month = data.getMonth();\r\n//     const Day = data.getDate();\r\n//     const Hour = data.getHours();\r\n//     const Minutes = data.getMinutes();\r\n//     const Seconds = data.getSeconds();\r\n\r\n//     return `Time: ${Hour}:${Minutes}:${Seconds}\r\n// Data: ${Day}.${Month}.${Year}`\r\n//   }\r\n\r\n//   // ------------------------------------------------------------------------------\r\n//   // получить объект \"todo\"\r\n\r\n//   function getTodoObj(titleTodo, despriptionTodo, usermTodo, statusTodo) {\r\n//     // const idTodo = Math.random().toString(36).slice(2);\r\n//     // const date = getDate();\r\n//     // const title = title;\r\n//     // const despription = despription;\r\n//     // const user = user;\r\n//     // const statusTodo = status;\r\n//     const todo = {\r\n//       id: Math.random().toString(36).slice(2),\r\n//       date: getDate(),\r\n//       title: titleTodo,\r\n//       despription: despriptionTodo,\r\n//       user: usermTodo,\r\n//       status: statusTodo, // 'todo' 'in progress' 'done'\r\n//     };\r\n\r\n//     return todo\r\n//   };\r\n\r\n//   // ------------------------------------------------------------------------------\r\n//   // часы\r\n\r\n//   function startTime() {\r\n//     const today = new Date();\r\n//     let h = today.getHours();\r\n//     let m = today.getMinutes();\r\n//     let s = today.getSeconds();\r\n//     m = checkTime(m);\r\n//     s = checkTime(s);\r\n//     document.querySelector('.header__time').innerHTML = h + ':' + m + ':' + s;\r\n//     setTimeout(startTime, 1000);\r\n//   }\r\n\r\n//   function checkTime(i) {\r\n//     if (i < 10) { i = '0' + i };\r\n//     return i;\r\n//   }\r\n\r\n//   // вызов\r\n//   startTime();\r\n\r\n//   // ------------------------------------------------------------------------------\r\n//   // счетчик Todos\r\n\r\n//   function updateCounter() {\r\n//     // счетчик Todo\r\n//     (function getTodoCounter() {\r\n//       return document.querySelector('.task-list__counters--todo').textContent = document.getElementsByClassName('task--todo').length;\r\n//     })();\r\n//     // счетчик InProgress\r\n//     (function getInProgressCounter() {\r\n//       return document.querySelector('.task-list__counters--in-progress').textContent = document.getElementsByClassName('task--in-progress').length;\r\n//     })();\r\n//     // счетчик Done\r\n//     (function getDoneCounter() {\r\n//       return document.querySelector('.task-list__counters--done').textContent = document.getElementsByClassName('task--done').length;\r\n//     })();\r\n//   };\r\n\r\n//   updateCounter();\r\n\r\n//   // ------------------------------------------------------------------------------\r\n//   // создание элементов\r\n\r\n//   // создание элемента - div\r\n//   function createDiv(classList) {\r\n//     const element = document.createElement('div');\r\n//     element.classList = classList;\r\n//     return element;\r\n//   }\r\n\r\n//   // создание элемента - label\r\n//   function createLabel(classList) {\r\n//     const element = document.createElement('label');\r\n//     element.classList = classList;\r\n//     return element;\r\n//   }\r\n\r\n//   // создание элемента - button\r\n//   function createButton(classList, textContent) {\r\n//     const element = document.createElement('button');\r\n//     element.classList = classList;\r\n//     element.type = 'button';\r\n//     element.textContent = textContent;\r\n//     return element;\r\n//   }\r\n\r\n//   // создание элемента - input\r\n//   function createInput(classList, name, placeholder) {\r\n//     const element = document.createElement('input');\r\n//     element.classList = classList;\r\n//     element.type = 'text';\r\n//     element.name = name;\r\n//     element.placeholder = placeholder;\r\n//     return element;\r\n//   }\r\n\r\n//   // ------------------------------------------------------------------------------\r\n//   // модальное окно формы Todo\r\n\r\n//   const headerTime = document.querySelector('.header__time');\r\n//   const taskListBodyTodo = document.querySelector('.task-list__body--todo');\r\n//   const taskListBtnAddTodo = document.querySelector('.task-list__btn--add-todo');\r\n//   const formAddTodo = document.querySelector('.form-add-todo');\r\n//   const formInputTitle = document.querySelector('.form-add-todo__input-title');\r\n//   const formInputDescription = document.querySelector('.form-add-todo__input-description');\r\n//   const formВtnCancel = document.querySelector('.form-add-todo__btn-cancel');\r\n//   const formВtnConfirm = document.querySelector('.form-add-todo__btn-confirm');\r\n//   const formSelectUser = document.querySelector('.form-add-todo__user');\r\n\r\n//   const controls = document.querySelectorAll('.form-control');\r\n\r\n//   function addTodo() {\r\n//     formAddTodo.classList.toggle('form-add-todo--vis');\r\n//     formInputTitle.value = '';\r\n//     formInputDescription.value = '';\r\n//     formSelectUser.value = '';\r\n//   };\r\n\r\n//   function pressCancel() {\r\n//     formAddTodo.classList.toggle('form-add-todo--vis');\r\n//     formInputDescription.classList.remove('invalid-control');\r\n//     formInputTitle.classList.remove('invalid-control');\r\n//     formSelectUser.classList.remove('invalid-control');\r\n//   };\r\n\r\n//   function pressConfirm() {\r\n//     // if () {\r\n//     //   taskListBodyTodo.querySelectorAll('.task--todo')\r\n//     //   .forEach(el => )\r\n//     // }\r\n//     controls.forEach(control => {\r\n//       if (control.classList.contains('required') && !control.value) {\r\n//         control.classList.add('invalid-control');\r\n//       }\r\n//     });\r\n\r\n//     if (formInputTitle.value && formInputDescription.value && formSelectUser.value) {\r\n//       formAddTodo.classList.toggle('form-add-todo--vis');\r\n\r\n//       const elTask = createDiv('task task--todo');\r\n//       elTask.draggable = true; // Drag'n'drop ***\r\n//       elTask.id = Math.random().toString(36).slice(2);\r\n\r\n//       taskListBodyTodo.append(\r\n//         elTask\r\n//       );\r\n\r\n//       const elTaskHeaer = createDiv('task__header');\r\n//       const elTaskBody = createDiv('task__body');\r\n//       const elTaskFooter = createDiv('task__footer');\r\n\r\n//       elTask.append(\r\n//         elTaskHeaer,\r\n//         elTaskBody,\r\n//         elTaskFooter\r\n//       );\r\n\r\n//       const elTaskBtnContainer = createDiv('task__btn-container');\r\n//       const elTaskTitle = createDiv('task__title');\r\n//       elTaskTitle.textContent = formInputTitle.value;\r\n\r\n//       elTaskHeaer.append(\r\n//         elTaskBtnContainer,\r\n//         elTaskTitle\r\n//       );\r\n\r\n//       const elTaskBtnEdit = createButton('task__btn task__btn--edit', 'EDIT');\r\n//       const elTaskBtnDel = createButton('task__btn task__btn--del', 'DELETE');\r\n\r\n//       elTaskBtnContainer.append(\r\n//         elTaskBtnEdit,\r\n//         elTaskBtnDel\r\n//       );\r\n\r\n//       const elTaskDescription = createDiv('task__description');\r\n//       elTaskDescription.textContent = formInputDescription.value;\r\n//       const elTaskBtnRelocate = createButton('task__btn task__btn--relocate', '>');\r\n\r\n//       elTaskBody.append(\r\n//         elTaskDescription,\r\n//         elTaskBtnRelocate\r\n//       );\r\n\r\n//       const elTaskUser = createDiv('task__user');\r\n//       elTaskUser.textContent = formSelectUser.value;\r\n//       const elTaskTime = createDiv('task__time');\r\n//       elTaskTime.textContent = headerTime.textContent;\r\n\r\n//       elTaskFooter.append(\r\n//         elTaskUser,\r\n//         elTaskTime\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   taskListBtnAddTodo.addEventListener('click', addTodo);\r\n//   formВtnCancel.addEventListener('click', pressCancel);\r\n//   formВtnConfirm.addEventListener('click', pressConfirm);\r\n\r\n//   formAddTodo.addEventListener('click', function (event) {\r\n//     if (event.target.classList.contains('form-add-todo__input-title')) {\r\n//       event.target.closest('.form-add-todo__input-title').classList.remove('invalid-control');\r\n//     }\r\n\r\n//     if (event.target.classList.contains('form-add-todo__input-description')) {\r\n//       event.target.closest('.form-add-todo__input-description').classList.remove('invalid-control');\r\n//     }\r\n\r\n//     if (event.target.classList.contains('form-add-todo__user')) {\r\n//       event.target.closest('.form-add-todo__user').classList.remove('invalid-control');\r\n//     }\r\n//   })\r\n\r\n//   // ------------------------------------------------------------------------------\r\n//   // Drag'n'drop\r\n\r\n//   // События, происходящие с объектом перетаскивания:\r\n//   // dragstart   (срабатывает в начале операции перетаскивания элемента)\r\n//   // drag  (срабатывает, когда элемент перетаскивается)\r\n//   // dragend   (срабатывает, когда пользователь закончил перетаскивание элемента)\r\n\r\n//   // События, происходящие с объектом на который перетаскивают:\r\n//   // dragenter   (когда элемент будет перенесен на заданную зону (цель для переноса)) event.preventDefault();\r\n//   // dragover  (срабатывает, когда элемент перемещают над допустимой зоной для переноса) event.preventDefault();\r\n//   // dragleave   (срабатывает, когда элемент выходит из допустимой зоны для переноса)\r\n//   // drop  (срабатывает после того, как перетаскиваемый элемент опустился на объект перетаскивания)\r\n\r\n//   const board = document.querySelector('.board');\r\n//   const taskListBody = document.querySelector('.task-list__body');\r\n//   const taskListBodyInProgress = document.querySelector('.task-list__body--in-progress');\r\n//   const taskListBodyDone = document.querySelector('.task-list__body--done');\r\n//   // элемент который перетаскиваем\r\n//   let activeElement = null;\r\n\r\n//   function relocateProgressInTodo(elem) {\r\n//     elem.classList = 'task task--todo';\r\n//     elem.querySelector('.task__btn--back').textContent = 'EDIT';\r\n//     elem.querySelector('.task__btn--back').classList = 'task__btn task__btn--edit';\r\n//     elem.querySelector('.task__btn--complete').textContent = 'DELETE';\r\n//     elem.querySelector('.task__btn--complete').classList = 'task__btn task__btn--del';\r\n//     const elTaskBtnRelocate = createButton('task__btn task__btn--relocate', '>');\r\n//     elem.querySelector('.task__body').append(elTaskBtnRelocate);\r\n//     updateCounter();\r\n//   }\r\n\r\n//   function relocateTodoInProgress(elem) {\r\n//     elem.classList = 'task task--in-progress';\r\n//     elem.querySelector('.task__btn--relocate').remove()\r\n//     elem.querySelector('.task__btn--edit').textContent = 'BACK';\r\n//     elem.querySelector('.task__btn--edit').classList = 'task__btn task__btn--back';\r\n//     elem.querySelector('.task__btn--del').textContent = 'COMPLETE';\r\n//     elem.querySelector('.task__btn--del').classList = 'task__btn task__btn--complete';\r\n//     updateCounter();\r\n//   }\r\n\r\n//   function relocateProgressInDone(elem) {\r\n//     elem.classList = 'task task--done';\r\n//     // elem.classList.remove('task--in-progress');\r\n//     elem.querySelector('.task__btn--back').remove();\r\n//     elem.querySelector('.task__btn--complete').textContent = 'DELETE';\r\n//     elem.querySelector('.task__btn--complete').classList = 'task__btn task__btn--del';\r\n//     updateCounter();\r\n//   }\r\n\r\n//   function relocateDoneInTodo(elem) {\r\n//     elem.classList = 'task task--todo';\r\n//     const elTaskBtnRelocate = createButton('task__btn task__btn--relocate', '>');\r\n//     elem.querySelector('.task__body').append(elTaskBtnRelocate)\r\n//     const elTaskBtnEdit = createButton('task__btn task__btn--edit', 'EDIT');\r\n//     elem.querySelector('.task__btn-container').prepend(elTaskBtnEdit);\r\n//     updateCounter();\r\n//   }\r\n\r\n//   function relocateDoneInProgress(elem) {\r\n//     elem.classList = 'task task--in-progress';\r\n//     const elTaskBtnBack = createButton('task__btn task__btn--back', 'BACK');\r\n//     elem.querySelector('.task__btn-container').prepend(elTaskBtnBack)\r\n//     elem.querySelector('.task__btn--del').textContent = 'COMPLETE';\r\n//     elem.querySelector('.task__btn--del').classList = 'task__btn task__btn--complete';\r\n//     updateCounter();\r\n//   }\r\n\r\n//   function relocateTodoInDone(elem) {\r\n//     elem.classList = 'task task--done';\r\n//     elem.querySelector('.task__btn--relocate').remove();\r\n//     elem.querySelector('.task__btn--edit').remove();\r\n//     updateCounter();\r\n//   }\r\n\r\n//   // срабатывает в начале операции перетаскивания элемента\r\n//   board.addEventListener('dragstart', (event) => {\r\n//     event.target.classList.add('active-element');\r\n//     activeElement = event.target;\r\n//   })\r\n\r\n//   // срабатывает, когда элемент перемещают над допустимой зоной для переноса\r\n//   board.addEventListener('dragover', (event) => {\r\n//     event.preventDefault();\r\n//     // Элемент перед которым нужно разместить activeElement\r\n//     const currentElement = event.target;\r\n//     // Находим элемент, перед которым будем вставлять\r\n//     const nextElement = (currentElement === activeElement.nextElementSibling) ?\r\n//       currentElement.nextElementSibling :\r\n//       currentElement;\r\n//     // Вставяем activeElement\r\n//     setTimeout(() => {\r\n//       if (currentElement.classList.contains(`task`)) {\r\n//         currentElement.closest('.task-list__body').insertBefore(activeElement, nextElement);\r\n//       } else if (currentElement.classList.contains(`task-list__body`)) {\r\n//         currentElement.prepend(activeElement);\r\n//       }\r\n//     }, 100);\r\n//   });\r\n\r\n//   // срабатывает, когда пользователь закончил перетаскивание элемента\r\n//   board.addEventListener('dragend', (event) => {\r\n//     event.target.classList.remove('active-element');\r\n//     // перемещение в TodoList\r\n//     if (event.target.closest('.task-list__body--todo')) {\r\n//       if (event.target.classList.contains('task--in-progress')) {\r\n//         relocateProgressInTodo(event.target);\r\n//       } else if (event.target.classList.contains('task--done')) {\r\n//         relocateDoneInTodo(event.target);\r\n//       }\r\n//       // перемещение в InProgress\r\n//     } else if (event.target.closest('.task-list__body--in-progress')) {\r\n//       if (event.target.classList.contains('task--todo')) {\r\n//         relocateTodoInProgress(event.target);\r\n//       } else if (event.target.classList.contains('task--done')) {\r\n//         relocateDoneInProgress(event.target);\r\n//       }\r\n//       // перемещение в Done\r\n//     } else if (event.target.closest('.task-list__body--done')) {\r\n//       if (event.target.classList.contains('task--todo')) {\r\n//         relocateTodoInDone(event.target);\r\n//       } else if (event.target.classList.contains('task--in-progress')) {\r\n//         relocateProgressInDone(event.target);\r\n//       }\r\n//     }\r\n//   });\r\n\r\n//   // ------------------------------------------------------------------------------\r\n//   // Ивенты в board\r\n\r\n//   board.addEventListener('click', function (event) {\r\n//     // удаление карточки кнопкой DELETE\r\n//     if (event.target.classList.contains('task__btn--del')) {\r\n//       const task = event.target.closest('.task');\r\n//       task.remove();\r\n//       updateCounter();\r\n//     }\r\n//     // перемещение из Todo в InProgress\r\n//     if (event.target.classList.contains('task__btn--relocate')) {\r\n//       const task = event.target.closest('.task');\r\n//       const cloneTask = task.cloneNode(true);\r\n//       task.remove();\r\n//       relocateTodoInProgress(cloneTask)\r\n//       document.querySelector('.task-list__body--in-progress').prepend(cloneTask);\r\n//     }\r\n//     // перемещение из InProgress в Todo\r\n//     if (event.target.classList.contains('task__btn--back')) {\r\n//       const task = event.target.closest('.task');\r\n//       const cloneTask = task.cloneNode(true);\r\n//       task.remove();\r\n//       relocateProgressInTodo(cloneTask);\r\n//       document.querySelector('.task-list__body--todo').prepend(cloneTask);\r\n//     }\r\n//     // перемещение из InProgress в Done\r\n//     if (event.target.classList.contains('task__btn--complete')) {\r\n//       const task = event.target.closest('.task');\r\n//       const cloneTask = task.cloneNode(true);\r\n//       task.remove();\r\n//       relocateProgressInDone(cloneTask)\r\n//       document.querySelector('.task-list__body--done').prepend(cloneTask);\r\n//     }\r\n//     // удаление всех карточек\r\n//     if (event.target.classList.contains('task-list__btn--del-all')) {\r\n//       taskListBodyDone.querySelectorAll('.task--done').\r\n//         forEach(elem => elem.remove());\r\n//       updateCounter();\r\n//     }\r\n//     // редакрирование Todo\r\n//     if (event.target.classList.contains('task__btn--edit')) {\r\n//       editTodo()\r\n//     }\r\n//   });\r\n\r\n//   function editTodo() {\r\n//     const idTask = event.target.closest('.task')\r\n//     const taskTitleText = idTask.querySelector('.task__title').textContent\r\n//     const taskDescriptionText = idTask.querySelector('.task__description').textContent\r\n//     const taskUserText = idTask.querySelector('.task__user').textContent\r\n\r\n//     formAddTodo.classList.toggle('form-add-todo--vis');\r\n\r\n\r\n//     formInputTitle.value = taskTitleText;\r\n//     formInputDescription.value = taskDescriptionText;\r\n//     formSelectUser.value = taskUserText;\r\n//   };\r\n\r\n// }\r\n\r\n// runTrelloApplication()\r\n\r\n// // ------------------------------------------------------------------------------\r\n// // часы\r\n\r\n// function startTime() {\r\n//   const today = new Date();\r\n//   let h = today.getHours();\r\n//   let m = today.getMinutes();\r\n//   let s = today.getSeconds();\r\n//   m = checkTime(m);\r\n//   s = checkTime(s);\r\n//   document.querySelector('.header__time').innerHTML = h + ':' + m + ':' + s;\r\n//   setTimeout(startTime, 1000);\r\n// }\r\n\r\n// function checkTime(i) {\r\n//   if (i < 10) { i = '0' + i };\r\n//   return i;\r\n// }\r\n\r\n// // вызов\r\n// startTime();\r\n\r\n// // ------------------------------------------------------------------------------\r\n// // счетчик Todos\r\n\r\n// function updateCounter() {\r\n//   // счетчик Todo\r\n//   (function getTodoCounter() {\r\n//     return document.querySelector('.task-list__counters--todo').textContent = document.getElementsByClassName('task--todo').length;\r\n//   })();\r\n//   // счетчик InProgress\r\n//   (function getInProgressCounter() {\r\n//     return document.querySelector('.task-list__counters--in-progress').textContent = document.getElementsByClassName('task--in-progress').length;\r\n//   })();\r\n//   // счетчик Done\r\n//   (function getDoneCounter() {\r\n//     return document.querySelector('.task-list__counters--done').textContent = document.getElementsByClassName('task--done').length;\r\n//   })();\r\n// };\r\n\r\n// updateCounter();\r\n\r\n// // ------------------------------------------------------------------------------\r\n// // создание элементов\r\n\r\n// // создание элемента - div\r\n// function createDiv(classList) {\r\n//   const element = document.createElement('div');\r\n//   element.classList = classList;\r\n//   return element;\r\n// }\r\n\r\n// // создание элемента - label\r\n// function createLabel(classList) {\r\n//   const element = document.createElement('label');\r\n//   element.classList = classList;\r\n//   return element;\r\n// }\r\n\r\n// // создание элемента - button\r\n// function createButton(classList, textContent) {\r\n//   const element = document.createElement('button');\r\n//   element.classList = classList;\r\n//   element.type = 'button';\r\n//   element.textContent = textContent;\r\n//   return element;\r\n// }\r\n\r\n// // создание элемента - input\r\n// function createInput(classList, name, placeholder) {\r\n//   const element = document.createElement('input');\r\n//   element.classList = classList;\r\n//   element.type = 'text';\r\n//   element.name = name;\r\n//   element.placeholder = placeholder;\r\n//   return element;\r\n// }\r\n\r\n// // ------------------------------------------------------------------------------\r\n// // модальное окно формы Todo\r\n\r\n// const headerTime = document.querySelector('.header__time');\r\n// const taskListBodyTodo = document.querySelector('.task-list__body--todo');\r\n// const taskListBtnAddTodo = document.querySelector('.task-list__btn--add-todo');\r\n// const formAddTodo = document.querySelector('.form-add-todo');\r\n// const formInputTitle = document.querySelector('.form-add-todo__input-title');\r\n// const formInputDescription = document.querySelector('.form-add-todo__input-description');\r\n// const formВtnCancel = document.querySelector('.form-add-todo__btn-cancel');\r\n// const formВtnConfirm = document.querySelector('.form-add-todo__btn-confirm');\r\n// const formSelectUser = document.querySelector('.form-add-todo__user');\r\n\r\n// const controls = document.querySelectorAll('.form-control');\r\n\r\n// function addTodo() {\r\n//   formAddTodo.classList.toggle('form-add-todo--vis');\r\n//   formInputTitle.value = '';\r\n//   formInputDescription.value = '';\r\n//   formSelectUser.value = '';\r\n// };\r\n\r\n// function pressCancel() {\r\n//   formAddTodo.classList.toggle('form-add-todo--vis');\r\n//   formInputDescription.classList.remove('invalid-control');\r\n//   formInputTitle.classList.remove('invalid-control');\r\n//   formSelectUser.classList.remove('invalid-control');\r\n// };\r\n\r\n// function pressConfirm() {\r\n//   // if () {\r\n//   //   taskListBodyTodo.querySelectorAll('.task--todo')\r\n//   //   .forEach(el => )\r\n//   // }\r\n//   controls.forEach(control => {\r\n//     if (control.classList.contains('required') && !control.value) {\r\n//       control.classList.add('invalid-control');\r\n//     }\r\n//   });\r\n\r\n//   if (formInputTitle.value && formInputDescription.value && formSelectUser.value) {\r\n//     formAddTodo.classList.toggle('form-add-todo--vis');\r\n\r\n//     const elTask = createDiv('task task--todo');\r\n//     elTask.draggable = true; // Drag'n'drop ***\r\n//     elTask.id = Math.random().toString(36).slice(2);\r\n\r\n//     taskListBodyTodo.append(\r\n//       elTask\r\n//     );\r\n\r\n//     const elTaskHeaer = createDiv('task__header');\r\n//     const elTaskBody = createDiv('task__body');\r\n//     const elTaskFooter = createDiv('task__footer');\r\n\r\n//     elTask.append(\r\n//       elTaskHeaer,\r\n//       elTaskBody,\r\n//       elTaskFooter\r\n//     );\r\n\r\n//     const elTaskBtnContainer = createDiv('task__btn-container');\r\n//     const elTaskTitle = createDiv('task__title');\r\n//     elTaskTitle.textContent = formInputTitle.value;\r\n\r\n//     elTaskHeaer.append(\r\n//       elTaskBtnContainer,\r\n//       elTaskTitle\r\n//     );\r\n\r\n//     const elTaskBtnEdit = createButton('task__btn task__btn--edit', 'EDIT');\r\n//     const elTaskBtnDel = createButton('task__btn task__btn--del', 'DELETE');\r\n\r\n//     elTaskBtnContainer.append(\r\n//       elTaskBtnEdit,\r\n//       elTaskBtnDel\r\n//     );\r\n\r\n//     const elTaskDescription = createDiv('task__description');\r\n//     elTaskDescription.textContent = formInputDescription.value;\r\n//     const elTaskBtnRelocate = createButton('task__btn task__btn--relocate', '>');\r\n\r\n//     elTaskBody.append(\r\n//       elTaskDescription,\r\n//       elTaskBtnRelocate\r\n//     );\r\n\r\n//     const elTaskUser = createDiv('task__user');\r\n//     elTaskUser.textContent = formSelectUser.value;\r\n//     const elTaskTime = createDiv('task__time');\r\n//     elTaskTime.textContent = headerTime.textContent;\r\n\r\n//     elTaskFooter.append(\r\n//       elTaskUser,\r\n//       elTaskTime\r\n//     );\r\n//   }\r\n// };\r\n\r\n// taskListBtnAddTodo.addEventListener('click', addTodo);\r\n// formВtnCancel.addEventListener('click', pressCancel);\r\n// formВtnConfirm.addEventListener('click', pressConfirm);\r\n\r\n// formAddTodo.addEventListener('click', function (event) {\r\n//   if (event.target.classList.contains('form-add-todo__input-title')) {\r\n//     event.target.closest('.form-add-todo__input-title').classList.remove('invalid-control');\r\n//   }\r\n\r\n//   if (event.target.classList.contains('form-add-todo__input-description')) {\r\n//     event.target.closest('.form-add-todo__input-description').classList.remove('invalid-control');\r\n//   }\r\n\r\n//   if (event.target.classList.contains('form-add-todo__user')) {\r\n//     event.target.closest('.form-add-todo__user').classList.remove('invalid-control');\r\n//   }\r\n// })\r\n\r\n// // ------------------------------------------------------------------------------\r\n// // Drag'n'drop\r\n\r\n// // События, происходящие с объектом перетаскивания:\r\n// // dragstart   (срабатывает в начале операции перетаскивания элемента)\r\n// // drag  (срабатывает, когда элемент перетаскивается)\r\n// // dragend   (срабатывает, когда пользователь закончил перетаскивание элемента)\r\n\r\n// // События, происходящие с объектом на который перетаскивают:\r\n// // dragenter   (когда элемент будет перенесен на заданную зону (цель для переноса)) event.preventDefault();\r\n// // dragover  (срабатывает, когда элемент перемещают над допустимой зоной для переноса) event.preventDefault();\r\n// // dragleave   (срабатывает, когда элемент выходит из допустимой зоны для переноса)\r\n// // drop  (срабатывает после того, как перетаскиваемый элемент опустился на объект перетаскивания)\r\n\r\n// const board = document.querySelector('.board');\r\n// const taskListBody = document.querySelector('.task-list__body');\r\n// const taskListBodyInProgress = document.querySelector('.task-list__body--in-progress');\r\n// const taskListBodyDone = document.querySelector('.task-list__body--done');\r\n// // элемент который перетаскиваем\r\n// let activeElement = null;\r\n\r\n// function relocateProgressInTodo(elem) {\r\n//   elem.classList = 'task task--todo';\r\n//   elem.querySelector('.task__btn--back').textContent = 'EDIT';\r\n//   elem.querySelector('.task__btn--back').classList = 'task__btn task__btn--edit';\r\n//   elem.querySelector('.task__btn--complete').textContent = 'DELETE';\r\n//   elem.querySelector('.task__btn--complete').classList = 'task__btn task__btn--del';\r\n//   const elTaskBtnRelocate = createButton('task__btn task__btn--relocate', '>');\r\n//   elem.querySelector('.task__body').append(elTaskBtnRelocate);\r\n//   updateCounter();\r\n// }\r\n\r\n// function relocateTodoInProgress(elem) {\r\n//   elem.classList = 'task task--in-progress';\r\n//   elem.querySelector('.task__btn--relocate').remove()\r\n//   elem.querySelector('.task__btn--edit').textContent = 'BACK';\r\n//   elem.querySelector('.task__btn--edit').classList = 'task__btn task__btn--back';\r\n//   elem.querySelector('.task__btn--del').textContent = 'COMPLETE';\r\n//   elem.querySelector('.task__btn--del').classList = 'task__btn task__btn--complete';\r\n//   updateCounter();\r\n// }\r\n\r\n// function relocateProgressInDone(elem) {\r\n//   elem.classList = 'task task--done';\r\n//   // elem.classList.remove('task--in-progress');\r\n//   elem.querySelector('.task__btn--back').remove();\r\n//   elem.querySelector('.task__btn--complete').textContent = 'DELETE';\r\n//   elem.querySelector('.task__btn--complete').classList = 'task__btn task__btn--del';\r\n//   updateCounter();\r\n// }\r\n\r\n// function relocateDoneInTodo(elem) {\r\n//   elem.classList = 'task task--todo';\r\n//   const elTaskBtnRelocate = createButton('task__btn task__btn--relocate', '>');\r\n//   elem.querySelector('.task__body').append(elTaskBtnRelocate)\r\n//   const elTaskBtnEdit = createButton('task__btn task__btn--edit', 'EDIT');\r\n//   elem.querySelector('.task__btn-container').prepend(elTaskBtnEdit);\r\n//   updateCounter();\r\n// }\r\n\r\n// function relocateDoneInProgress(elem) {\r\n//   elem.classList = 'task task--in-progress';\r\n//   const elTaskBtnBack = createButton('task__btn task__btn--back', 'BACK');\r\n//   elem.querySelector('.task__btn-container').prepend(elTaskBtnBack)\r\n//   elem.querySelector('.task__btn--del').textContent = 'COMPLETE';\r\n//   elem.querySelector('.task__btn--del').classList = 'task__btn task__btn--complete';\r\n//   updateCounter();\r\n// }\r\n\r\n// function relocateTodoInDone(elem) {\r\n//   elem.classList = 'task task--done';\r\n//   elem.querySelector('.task__btn--relocate').remove();\r\n//   elem.querySelector('.task__btn--edit').remove();\r\n//   updateCounter();\r\n// }\r\n\r\n// // срабатывает в начале операции перетаскивания элемента\r\n// board.addEventListener('dragstart', (event) => {\r\n//   event.target.classList.add('active-element');\r\n//   activeElement = event.target;\r\n// })\r\n\r\n// // срабатывает, когда элемент перемещают над допустимой зоной для переноса\r\n// board.addEventListener('dragover', (event) => {\r\n//   event.preventDefault();\r\n//   // Элемент перед которым нужно разместить activeElement\r\n//   const currentElement = event.target;\r\n//   // Находим элемент, перед которым будем вставлять\r\n//   const nextElement = (currentElement === activeElement.nextElementSibling) ?\r\n//     currentElement.nextElementSibling :\r\n//     currentElement;\r\n//   // Вставяем activeElement\r\n//   setTimeout(() => {\r\n//     if (currentElement.classList.contains(`task`)) {\r\n//       currentElement.closest('.task-list__body').insertBefore(activeElement, nextElement);\r\n//     } else if (currentElement.classList.contains(`task-list__body`)) {\r\n//       currentElement.prepend(activeElement);\r\n//     }\r\n//   }, 100);\r\n// });\r\n\r\n// // срабатывает, когда пользователь закончил перетаскивание элемента\r\n// board.addEventListener('dragend', (event) => {\r\n//   event.target.classList.remove('active-element');\r\n//   // перемещение в TodoList\r\n//   if (event.target.closest('.task-list__body--todo')) {\r\n//     if (event.target.classList.contains('task--in-progress')) {\r\n//       relocateProgressInTodo(event.target);\r\n//     } else if (event.target.classList.contains('task--done')) {\r\n//       relocateDoneInTodo(event.target);\r\n//     }\r\n//     // перемещение в InProgress\r\n//   } else if (event.target.closest('.task-list__body--in-progress')) {\r\n//     if (event.target.classList.contains('task--todo')) {\r\n//       relocateTodoInProgress(event.target);\r\n//     } else if (event.target.classList.contains('task--done')) {\r\n//       relocateDoneInProgress(event.target);\r\n//     }\r\n//     // перемещение в Done\r\n//   } else if (event.target.closest('.task-list__body--done')) {\r\n//     if (event.target.classList.contains('task--todo')) {\r\n//       relocateTodoInDone(event.target);\r\n//     } else if (event.target.classList.contains('task--in-progress')) {\r\n//       relocateProgressInDone(event.target);\r\n//     }\r\n//   }\r\n// });\r\n\r\n// // ------------------------------------------------------------------------------\r\n// // Ивенты в board\r\n\r\n// board.addEventListener('click', function (event) {\r\n//   // удаление карточки кнопкой DELETE\r\n//   if (event.target.classList.contains('task__btn--del')) {\r\n//     const task = event.target.closest('.task');\r\n//     task.remove();\r\n//     updateCounter();\r\n//   }\r\n//   // перемещение из Todo в InProgress\r\n//   if (event.target.classList.contains('task__btn--relocate')) {\r\n//     const task = event.target.closest('.task');\r\n//     const cloneTask = task.cloneNode(true);\r\n//     task.remove();\r\n//     relocateTodoInProgress(cloneTask)\r\n//     document.querySelector('.task-list__body--in-progress').prepend(cloneTask);\r\n//   }\r\n//   // перемещение из InProgress в Todo\r\n//   if (event.target.classList.contains('task__btn--back')) {\r\n//     const task = event.target.closest('.task');\r\n//     const cloneTask = task.cloneNode(true);\r\n//     task.remove();\r\n//     relocateProgressInTodo(cloneTask);\r\n//     document.querySelector('.task-list__body--todo').prepend(cloneTask);\r\n//   }\r\n//   // перемещение из InProgress в Done\r\n//   if (event.target.classList.contains('task__btn--complete')) {\r\n//     const task = event.target.closest('.task');\r\n//     const cloneTask = task.cloneNode(true);\r\n//     task.remove();\r\n//     relocateProgressInDone(cloneTask)\r\n//     document.querySelector('.task-list__body--done').prepend(cloneTask);\r\n//   }\r\n//   // удаление всех карточек\r\n//   if (event.target.classList.contains('task-list__btn--del-all')) {\r\n//     taskListBodyDone.querySelectorAll('.task--done').\r\n//       forEach(elem => elem.remove());\r\n//     updateCounter();\r\n//   }\r\n//   // редакрирование Todo\r\n//   if (event.target.classList.contains('task__btn--edit')) {\r\n//     editTodo()\r\n//   }\r\n\r\n//   // очистка localStorage\r\n//   if (event.target.classList.contains('task-list__header--done')) {\r\n//     localStorage.clear()\r\n//   }\r\n// });\r\n\r\n// function editTodo() {\r\n//   const idTask = event.target.closest('.task')\r\n//   const taskTitleText = idTask.querySelector('.task__title').textContent\r\n//   const taskDescriptionText = idTask.querySelector('.task__description').textContent\r\n//   const taskUserText = idTask.querySelector('.task__user').textContent\r\n\r\n//   formAddTodo.classList.toggle('form-add-todo--vis');\r\n\r\n\r\n//   formInputTitle.value = taskTitleText;\r\n//   formInputDescription.value = taskDescriptionText;\r\n//   formSelectUser.value = taskUserText;\r\n// };","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}